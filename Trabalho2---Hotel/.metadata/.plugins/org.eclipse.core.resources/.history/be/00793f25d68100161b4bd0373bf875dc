import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;

import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.text.MaskFormatter;


/**
* This code was edited or generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED FOR
* THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED
* LEGALLY FOR ANY CORPORATE OR COMMERCIAL PURPOSE.
*/
public class JanelaDeEditarUsuario2 {
	private JLabel lbNome;
	private JTextField tfNome;
	private JLabel lbData;

	private JTextField tfLogradouro;
	private JLabel lbNumero;
	private JTextField tfNumero;
	private JLabel lbDataCad;
	private JTextField tfDataCad;
	
	
	
	private JButton btMostrar;
	private JButton btSair;
	private JPanel panel;
	private JDialog frame;
	
	private int op;

	/**
	 * @wbp.parser.entryPoint
	 */
	public JanelaDeEditarUsuario2(int co) {
		ArrayList<Cliente> vetor = new ArrayList<Cliente>();

		Connection conexao = null;
		ClienteDAO daoCliente = null;

		
		try {
			conexao = ConnectionFactory.getConnection();
			daoCliente = new ClienteDAO(conexao);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			vetor = daoCliente.listaPorCod(co);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		op = vetor.get(0).getCod();
		
		lbNome = new JLabel("Nome");
		tfNome = new JTextField(30);
		tfNome.setText(vetor.get(0).getNome());

		lbData = new JLabel("Data");
		try {
			MaskFormatter maskIden = new MaskFormatter("UU-##.###.###");
		} catch (ParseException e) {
			e.printStackTrace();
		}
		try {
			MaskFormatter maskCPF = new MaskFormatter("###.###.###-##");
		} catch (ParseException e) {
			e.printStackTrace();
		}
		try {
			MaskFormatter maskTel = new MaskFormatter("(##)####-####");
		} catch (ParseException e) {
			e.printStackTrace();
		}
		
		
		
		tfLogradouro = new JTextField(25);
		tfNumero = new JTextField(4);
		tfNumero.setText(""+vetor.get(0).getNumero());
		try {
			MaskFormatter maskCEP = new MaskFormatter("#####-###");
		} catch (ParseException e) {
			e.printStackTrace();
		}
		ComboBoxModel cbUFModel = 
			new DefaultComboBoxModel(
					new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO"});
		cbUFModel.setSelectedItem(vetor.get(0).getUf());
		Date d = new java.sql.Date(vetor.get(0).getDataNasc().getTimeInMillis());
		

		//btSair.setEnabled(false);
		
		GridBagConstraints cons = new GridBagConstraints();
		cons.fill = GridBagConstraints.HORIZONTAL; // não redimensionar objeto inserido;
		cons.insets = new Insets(3,3, 3, 3); // distancia entre os objetos
		cons.anchor = GridBagConstraints.WEST;

		panel = new JPanel();
		panel.setLayout(null);
		panel.setPreferredSize(new java.awt.Dimension(496, 342));

		cons.gridx = 0;
		cons.gridy = 0;
		cons.gridwidth = 1;
		panel.add(lbNome, new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(3, 3, 3, 3), 0, 0));
		lbNome.setBounds(16, 12, 171, 16);

		cons.gridy = 1;
		cons.gridwidth = 4;
		panel.add(tfNome, new GridBagConstraints(0, 1, 4, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(3, 3, 3, 3), 0, 0));
		tfNome.setBounds(16, 34, 240, 23);

		cons.gridx = 0;
		cons.gridy = 2;
		cons.gridwidth = 1;

		cons.gridy = 3;
		cons.gridwidth = 2;

		cons.gridx = 2;
		cons.gridy = 2;

		cons.gridy = 3;
		cons.gridwidth = 1;

		cons.gridx = 0;
		cons.gridy = 4;
		cons.gridwidth = 1;

		cons.gridy = 5;
		cons.gridwidth = 1;

		cons.gridx = 1;
		cons.gridy = 4;

		cons.gridy = 5;
		cons.gridwidth = 1;

		cons.gridx = 2;
		cons.gridy = 4;
		cons.gridwidth = 1;

		cons.gridy = 5;
		cons.gridwidth = 2;

		cons.gridx = 0;
		cons.gridy = 6;
		cons.gridwidth = 1;

		cons.gridy = 7;
		cons.gridwidth = 1;

		cons.gridx = 1;
		cons.gridy = 6;
		cons.gridwidth = 1;

		cons.gridy = 7;
		cons.gridwidth = 1;

		cons.gridx = 2;
		cons.gridy = 6;
		cons.gridwidth = 1;

		cons.gridy = 7;
		cons.gridwidth = 2;

		cons.gridx = 0;
		cons.gridy = 8;
		cons.gridwidth = 1;

		cons.gridy = 9;
		cons.gridwidth = 2;

		cons.gridx = 2;
		cons.gridy = 8;
		cons.gridwidth = 1;

		cons.gridy = 9;
		cons.gridwidth = 2;
		{
			btMostrar = new JButton("Salvar");
			panel.add(btMostrar);
			btMostrar.setBounds(128, 266, 88, 22);
			btMostrar.addActionListener(new MostrarListener());
		}
		{
			btSair = new JButton("Cancelar");
			panel.add(btSair);
			btSair.setBounds(246, 266, 89, 22);
			btSair.addActionListener(new SairListener());
		}

		cons.gridx = 0;
		cons.gridy = 12;
		cons.gridwidth = 1;

		cons.gridx = 0;
		cons.gridy = 13;
		cons.gridwidth = 1;

		cons.gridy = 14;
		cons.gridwidth = 4;

		cons.gridx = 0;
		cons.gridy = 15;
		cons.gridwidth = 3;

		cons.gridy = 16;
		cons.gridwidth = 4;

		cons.gridx = 0;
		cons.gridy = 18;
		cons.gridwidth = 3;

		cons.gridy = 19;
		cons.gridwidth = 4;

		frame = new JDialog();
		frame.setTitle("Edi\u00E7\u00E3o de Usu\u00E1rios - Hotel");
		frame.setModal(true);
		//frame.add(panel);
		frame.getContentPane().add(BorderLayout.CENTER, panel);
		//frame.add(panelBotoes);
		//frame.getContentPane().add(BorderLayout.SOUTH, panelBotoes);
		//frame.setSize(300, 300);
		frame.pack(); // ajusta o tamanho da janela (frame)
		frame.setLocationRelativeTo(null); // coloca no meio
		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Sair do
		frame.setResizable(false);														// programa
		frame.setVisible(true); // torna a janela visível

	}

	private class MostrarListener implements ActionListener {
		@Override
		public void actionPerformed(ActionEvent arg0) {
			Cliente cli = new Cliente();
			cli.setNome(getTfNome().getText());
			cli.setRua(getTfEndereco().getText());
			cli.setNumero(Integer.parseInt(getTfNum().getText()));
			cli.setCidade(getTfCidade().getText());
			cli.setUf((String) getTfUF().getSelectedItem());
			cli.setCep(getTfCEP().getText());
			cli.setCpf(getTfCPF().getText());
			cli.setIdentidade(getTfIden().getText());
			cli.setTelefone(getTfTel().getText());
			cli.setEmail(getTfEmail().getText());
			
			//DATA--
			Calendar calen = new GregorianCalendar();
			SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
			try {
				calen.setTime(f.parse(getTfData().getText()));
			} catch (ParseException e1) {
				e1.printStackTrace();
			}
			cli.setDataNasc(calen);
			Connection conexao;
			int codigo = getOp();
			try {
				conexao = ConnectionFactory.getConnection();
				ClienteDAO dao = new ClienteDAO(conexao);
				dao.edita(cli, codigo);
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
			
			frame.dispose();
		}
	}

	private class SairListener implements ActionListener {
		@Override
		public void actionPerformed(ActionEvent arg0) {
			op = 2;
			frame.dispose();
			JanelaDeEditarCliente j = new JanelaDeEditarCliente();
		}
	}


	public static void main(String[] args) {
		//new teste2();
		//j.getPessoa();
	}

	public JTextField getTfNum() {
		return tfNum;
	}

	public JTextField getTfNome() {
		return tfNome;
	}

	public JTextField getTfEmail() {
		return tfEmail;
	}

	public JTextField getTfData() {
		return tfData;
	}

	public JTextField getTfIden() {
		return tfIden;
	}

	public JTextField getTfCPF() {
		return tfCPF;
	}

	public JTextField getTfTel() {
		return tfTel;
	}

//	public JTextField getTfLogradouro() {
//		return tfLogradouro;
//	}

	public JTextField getTfNumero() {
		return tfNumero;
	}

	public JTextField getTfEndereco() {
		return tfEndereco;
	}

	public JTextField getTfCEP() {
		return tfCEP;
	}

	public JTextField getTfCidade() {
		return tfCidade;
	}

	public JComboBox getTfUF() {
		return cbUF;
	}

	
	public int getOp(){
		return op;
	}
}